import telebot
from telebot import types

# === –î–ê–ù–ù–´–ï ===
TOKEN = "8442027340:AAFQAytkamQfTivxHl9iqMu3qAp7Pb25CI0"
ADMIN_ID = 7132770317  # —Ç–≤–æ–π Telegram ID (—É–∑–Ω–∞–π —É @userinfobot)

bot = telebot.TeleBot(TOKEN)
waiting_for_message = set()

# === –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ ===
def main_menu(chat_id, msg_id=None):
    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("‚úçÔ∏è –û—Ç–∑—ã–≤—ã", callback_data="reviews"),
        types.InlineKeyboardButton("üö´ –°–ø–∞–º –±–ª–æ–∫", callback_data="spamblock")
    )
    markup.add(
        types.InlineKeyboardButton("ü§ñ –£—Å–ª—É–≥–∏", callback_data="services"),
        types.InlineKeyboardButton("üíé NFT", callback_data="nft")
    )
    markup.add(types.InlineKeyboardButton("üåê –ù–∞—à —Å–∞–π—Ç", callback_data="site"))

    text = "üìç –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª üëá"

    if msg_id:
        bot.edit_message_text(text, chat_id, msg_id, reply_markup=markup)
    else:
        bot.send_message(chat_id, text, reply_markup=markup)

# === –°–¢–ê–†–¢ ===
@bot.message_handler(commands=['start'])
def start(message):
    main_menu(message.chat.id)

# === –ö–ù–û–ü–ö–ò ===
@bot.callback_query_handler(func=lambda call: True)
def callback_handler(call):
    chat_id = call.message.chat.id
    msg_id = call.message.message_id

    if call.data == "reviews":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"))
        bot.edit_message_text(
            "‚ú® –í–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ ‚Äî –º–æ—è –Ω–∞–≥—Ä–∞–¥–∞! ‚ú®\n\n"
            "üìú –†–µ–∞–ª—å–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ üíé\n\n"
            "üëâ –°–º–æ—Ç—Ä–∏: https://t.me/mefik_repa",
            chat_id,
            msg_id,
            reply_markup=markup
        )

    elif call.data == "spamblock":
        waiting_for_message.add(chat_id)
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"))
        bot.edit_message_text(
            "üö´ –£ —Ç–µ–±—è —Å–ø–∞–º-–±–ª–æ–∫? –ù–µ –±–µ–¥–∞!\n"
            "‚úçÔ∏è –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –µ–≥–æ –ª–∏—á–Ω–æ –ø–æ–ª—É—á—É ‚úÖ",
            chat_id,
            msg_id,
            reply_markup=markup
        )

    elif call.data == "services":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å ‚úÖ", url="tg://resolve?domain=new_swatal"))
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"))
        bot.edit_message_text(
            "ü§ñ –Ø –¥–µ–ª–∞—é –±–æ—Ç–æ–≤ –ø–æ–¥ –∫–ª–∏–µ–Ω—Ç–∞:\n\n"
            "üîπ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏\n"
            "üîπ –ö—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
            "üîπ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7\n\n"
            "‚úçÔ∏è –í –õ–° –Ω–∞–ø–∏—à–∏—Ç–µ:\n"
            "`#–±–æ—Ç –ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è`",
            chat_id,
            msg_id,
            parse_mode="Markdown",
            reply_markup=markup
        )

    elif call.data == "nft":
        markup = types.InlineKeyboardMarkup()
        markup.add(
            types.InlineKeyboardButton("üõí –ö—É–ø–∏—Ç—å", url="tg://resolve?domain=new_swatal"),
            types.InlineKeyboardButton("üí∞ –ü—Ä–æ–¥–∞—Ç—å", url="tg://resolve?domain=new_swatal")
        )
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"))
        bot.edit_message_text(
            "üíé NFT ‚Äî —ç—Ç–æ –±—É–¥—É—â–µ–µ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏.\n\n"
            "üî• –ü–æ—á–µ–º—É —è?\n"
            "1Ô∏è‚É£ –ß–µ—Å—Ç–Ω—ã–µ —Å–¥–µ–ª–∫–∏\n"
            "2Ô∏è‚É£ –û–ø—ã—Ç –∏ –¥–æ–≤–µ—Ä–∏–µ\n"
            "3Ô∏è‚É£ –£–¥–æ–±–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å\n\n"
            "‚úçÔ∏è –í –õ–° –Ω–∞–ø–∏—à–∏—Ç–µ:\n"
            "`#–Ω—Ñ—Ç –ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –∏ –¥–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥–∏—Ñ`",
            chat_id,
            msg_id,
            parse_mode="Markdown",
            reply_markup=markup
        )

    elif call.data == "site":
        markup = types.InlineKeyboardMarkup()
    
        markup.add(types.InlineKeyboardButton("üì© –°–≤—è–∑—å", url="tg://resolve?domain=new_swatal"))
        markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back"))
        bot.edit_message_text(
            "üåê **–ù–∞—à OSINT —Å–∞–π—Ç**\n\n"
            "üîç –í—Å–µ –≤–µ—Ç–≤–∏ OSINT-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤\n"
            "üìÇ –£–¥–æ–±–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞\n"
            "‚ö° –ú–Ω–æ–∂–µ—Å—Ç–≤–æ —Ç—É–ª–∑\n"
            "üõ† –ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n\n"
            
            "üíé –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ç–æ–ø-—Ç—É–ª–∑–∞–º ‚Äî —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º.",
            chat_id,
            msg_id,
            parse_mode="Markdown",
            reply_markup=markup
        )

    elif call.data == "back":
        main_menu(chat_id, msg_id)

# === –°–ü–ê–ú-–ë–õ–û–ö ===
@bot.message_handler(func=lambda m: m.chat.id in waiting_for_message, content_types=['text'])
def forward_message(message):
    waiting_for_message.remove(message.chat.id)
    bot.send_message(
        ADMIN_ID,
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{message.from_user.username or '–ë–µ–∑ –Ω–∏–∫–∞'}\n"
        f"ID: {message.from_user.id}\n"
        f"–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}"
    )
    bot.send_message(message.chat.id, "‚úÖ –¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É.")

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
